
FROM ubuntu:24.04


# arg is env variable but only visbile to build time, not runtime. has to be after FROM
ARG DEBIAN_FRONTEND='noninteractive'
ENV TZ='America/Toronto'

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone           && \
apt update  &&  apt install -y tzdata

# Usual deps
RUN apt install -y build-essential python3-pip pipenv nano htop time jq locate git curl wget

RUN apt install -y libzmq5 libtool pkg-config autoconf automake checkinstall cmake libssl-dev libffi-dev     \
net-tools iproute2 iputils-ping libmysqlclient-dev sudo openssh-server


# if you want pyspark and some xtras
# RUN apt install -y openjdk-11-jdk libcairo2 libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0

# -------------------- MISC
# ub pc default is 0002 which results in:
# -rw-rw-r-- files, < ---- 0002
# -rw-r--r-- files, < ---- 0022
# dont see how 022 is ever wrong.
RUN echo "" >> /etc/bash.bashrc  && \
echo "umask 0022" >> /etc/bash.bashrc


# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------- add sshd
# *** vscode-remote-ssh >>>>> vscode-remote-containers 


ARG SSH_PUBKEY_KK=""

RUN adduser --disabled-password --gecos "" vcr                         && \ 
echo "" >> /etc/sudoers                                                && \
echo "vcr ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers                      && \
echo "" >> /etc/sudoers                                                && \
mkdir -p /home/vcr/.ssh                                                && \
mkdir -p /home/vcr/bin                                                 && \
mkdir -p /home/vcr/zzpe                                                && \
mkdir -p /home/vcr/dkr_tmpz                                            && \
mkdir -p /home/vcr/.jupyter                                            && \
echo $SSH_PUBKEY_KK > /home/vcr/.ssh/authorized_keys                   && \
chown -R vcr:vcr /home/vcr/                                            && \
chmod 0600 /home/vcr/.ssh/authorized_keys


# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------ DL nodejs

# download both nd20 and nd22, but use nd20 for now.

RUN umask 0022                                                                                          && \
mkdir -p /home/vcr/nodez/dl_tmp                                                                         && \
cd /home/vcr/nodez/dl_tmp                                                                               && \
curl --silent https://nodejs.org/dist/v20.13.1/node-v20.13.1-linux-x64.tar.gz  -o nd20.tgz              && \
curl --silent https://nodejs.org/dist/v22.1.0/node-v22.1.0-linux-x64.tar.gz  -o nd22.tgz                && \
echo "80b978a9fe544b1892e73a4bf89e0b3792b1d459b621874efdc2ddd2270c03fe  nd20.tgz" | sha256sum -c        && \
echo "d8ae35a9e2bb0c0c0611ee9bacf564ea51cc8291ace1447f95ee6aeaf4f1d61d  nd22.tgz" | sha256sum -c        && \
tar -xf nd20.tgz                                                                                        && \
mv /home/vcr/nodez/dl_tmp/node-v20.13.1-linux-x64 /home/vcr/nodez/nd20                                  && \
cd /home/vcr                                                                                            && \
chown -R vcr:vcr /home/vcr/nodez




# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

COPY .bash_aliases /home/vcr/.bash_aliases
COPY .gitconfig /home/vcr/.gitconfig
COPY .gitignore_global /home/vcr/.gitignore_global
COPY entry.sh /home/vcr/bin/entry.sh
COPY rjl_176.sh /home/vcr/bin/rjl
# COPY jupyter_notebook_config.json /home/vcr/.jupyter/jupyter_notebook_config.json
# COPY sshd_config /etc/ssh/sshd_config


RUN /home/vcr/nodez/nd20/bin/node -v                                                      && \
echo 'export PATH="/home/vcr/nodez/nd20/bin:$PATH"' >> /home/vcr/.profile                 && \
chown -R vcr:vcr /home/vcr/                                                               && \
chmod u+rwx /home/vcr/bin/rjl




# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------------------------- switch to vcr
# this (change USER) works for all the remaining RUN commands going fwd.
# but probably not for COPY command as those files came up root owned.
# interactively you can change user like this:   $ su - vcr
USER vcr
ENV PATH="/home/vcr/nodez/nd20/bin:/home/vcr/bin:/home/vcr/.local/bin:$PATH"

RUN printf "\n\n\n\n"                    && \
whoami                                   && \
node -v                                  && \
printf "\n\n\n\n"



# ---------------------------------------------- Notes
# need to set this
# PREFIX=/home/vcr/nodez/nd20

# this is all good, by default. if you dont specify it, it defaults to where node itself is installed.
# which figures out the correct thing. for more:
# npm help 5 folders



# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------------------------- python and jl


COPY bx176__Pipfile /home/vcr/zzpe/Pipfile
# COPY bx176__Pipfile.lock__kp43 /home/vcr/zzpe/Pipfile.lock

# python3 -m pip install --user ||| doesnt work anymore on ubuntu 24. it doesnt realize i am fixing things w/ --user.
# use a venv at /home/vcr/zzpe
# cp the prepo's Pipfile.lock and just install that into zzpe, or just pipenv install and get new files.
RUN printf "\n\n\n\n"                                                                         && \
whoami                                                                                        && \
cd /home/vcr/zzpe                                                                             && \
pipenv install
# pipenv install pylint yapf requests boto3 jupyterlab cryptography pandas
# pyspark pg8000 pymysql confluent-kafka mysqlclient



# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------- npm pkgs


RUN npm install -g eslint

# --- ijs, doesnt work against nd 22 and ubuntu24, node 20 is last one.
RUN npm install -g ijavascript

# ijsinstall comes from npm install but calls jupyter and ipython so it must be run in the zzpe pipenv
RUN cd /home/vcr/zzpe      && \
pipenv run ijsinstall




# ------------- Not a fan of typescript and yarn, others use it.
# RUN npm install -g tslint typescript@5.4.3
# RUN npm install -g yarn

# --- tslab
# RUN npm install -g tslab                        && \
# tslab install --python=python3                  && \
# jupyter kernelspec list                         && \
# jupyter kernelspec remove -y jslab

# *** use ijavascript instead of jslab for js




CMD ["/bin/bash"]
